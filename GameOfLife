{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Lilbrosyrus/cosc470s24/blob/main/GameOfLife\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "CxYh2gy2wTtQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "5dcb6cd9-9365-4076-a0df-046cdf4f8970"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The world will be an n x n size grid. Enter this a value for n: 10\n",
            "Enter proportion (a number between 0 and 1) of cells that should start as alive. 0.3\n",
            "Enter the number of generations for the game of life to run: 10\n",
            "[1, 0, 0, 1, 1, 0, 0, 1, 0, 0]\n",
            "[0, 0, 1, 1, 1, 0, 0, 1, 0, 0]\n",
            "[0, 0, 1, 0, 1, 0, 1, 0, 1, 0]\n",
            "[1, 0, 0, 0, 0, 0, 1, 0, 0, 0]\n",
            "[1, 1, 1, 1, 1, 1, 1, 0, 1, 0]\n",
            "[0, 0, 1, 0, 0, 1, 0, 0, 1, 1]\n",
            "[0, 0, 0, 1, 1, 0, 0, 0, 0, 0]\n",
            "[1, 1, 0, 0, 0, 0, 1, 0, 0, 1]\n",
            "[0, 1, 1, 0, 0, 0, 0, 0, 0, 0]\n",
            "[0, 1, 1, 0, 0, 1, 0, 1, 0, 0]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZgAAAGdCAYAAAAv9mXmAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAUbElEQVR4nO3df6iW9f348dftcR7P4pybsmmJmi7GTO33KSmhMZIiWqwx2g8MmsH+iGNqwsg2SkbTk4NFkM0yNtdYWoPR+gFthCObK9GyWrFNN4LtUKgFcd9m7BTnXN8/9pmfj9/U7lvP61z3fXw84Pqjq/s+14v3fXeeXPd1uu5KURRFAMAIG1f2AACMTQIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKcaP9gGHh4fjnXfeie7u7qhUKqN9eABOQFEUceDAgZg6dWqMG3fsc5RRD8w777wT06dPH+3DAjCCBgYGYtq0acd8zKgHpru7OyL+M1xPT89oH/6oqtVq2SO0hVqtVvYIbcH7qTGt+H7y2jXmv7/Lj2XUA/Pfj8V6enpaKjA0xmvGSPJ+al+NXOJwkR+AFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEgxXEF5oEHHoiZM2fGxIkTY/78+bFjx46RnguANtd0YB5//PFYsWJFrFq1Knbt2hXnn39+XH311bF///6M+QBoU00H5t57743vfve7sXjx4pgzZ048+OCD8dnPfjZ+/vOfZ8wHQJtqKjAfffRRvPLKK7Fw4cL//QHjxsXChQvjpZdeOuJzBgcHo16vH7YBMPY1FZj33nsvhoaGYsqUKYftnzJlSuzdu/eIz+nv749qtXpo822WACeH9L8iu+OOO6JWqx3aBgYGsg8JQAto6hstTz/99Ojo6Ih9+/Ydtn/fvn1xxhlnHPE5nZ2d0dnZefwTAtCWmjqDmTBhQlx88cWxZcuWQ/uGh4djy5Ytcdlll434cAC0r6bOYCIiVqxYETfddFP09vbGpZdeGvfdd18cPHgwFi9enDEfAG2q6cB885vfjHfffTfuuuuu2Lt3b1xwwQXxu9/97hMX/gE4uVWKoihG84D1ej2q1WrUarXo6ekZzUMfU6VSKXuEtjDKb5e25f3UmFZ8P3ntGtPI73D3IgMghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABI0fTNLkdKtVot69BtoxXv0wTQKGcwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAU48segPZSqVTKHuETiqIoe4S20Irr5P3UmFZcp0Y4gwEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApmgpMf39/XHLJJdHd3R2TJ0+O66+/Pnbv3p01GwBtrKnAbN26Nfr6+mL79u3x3HPPxccffxxXXXVVHDx4MGs+ANpUpTiBb9d59913Y/LkybF169a44oorGnpOvV6ParV6vIc8qfjio8ZYp8ZYp8ZYp8bUarXo6ek55mNO6Bsta7VaREScdtppR33M4OBgDA4OHvrner1+IocEoE0c90X+4eHhWL58eSxYsCDmzZt31Mf19/dHtVo9tE2fPv14DwlAGznuj8huueWWePbZZ2Pbtm0xbdq0oz7uSGcwItMYp+qNsU6NsU6NsU6NSfuIbMmSJfHMM8/ECy+8cMy4RER0dnZGZ2fn8RwGgDbWVGCKoohbb701nnjiiXj++edj1qxZWXMB0OaaCkxfX19s2rQpnnzyyeju7o69e/dGRES1Wo2urq6UAQFoT01dgzna54AbN26M73znOw39DH+m3DifBTfGOjXGOjXGOjVmxK/BtOLCA9Ca3IsMgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIMUJfWXyiWjkRmmjqRVvJteKM7Ui68RI8n4aOc5gAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApxpc9QKsoiqLsEYAW0Iq/CyqVStkjHBdnMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAY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2pvAABGNBca9yABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSNHU3ZaAxrXhvu1a8j5x1GtucwQCQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkGD/aByyKYrQP2ZB6vV72CIwh3k+NsU7tq5Hf5aMemAMHDoz2IRtSrVbLHoExxPupMdapfR04cOBTX79KMcqnFMPDw/HOO+9Ed3d3VCqV4/459Xo9pk+fHgMDA9HT0zOCE44t1qkx1qkx1qkxY3mdiqKIAwcOxNSpU2PcuGNfZRn1M5hx48bFtGnTRuzn9fT0jLkXMIN1aox1aox1asxYXadGzzxd5AcghcAAkKJtA9PZ2RmrVq2Kzs7OskdpadapMdapMdapMdbpP0b9Ij8AJ4e2PYMBoLUJDAApBAaAFAIDQIq2DcwDDzwQM2fOjIkTJ8b8+fNjx44dZY/UUvr7++OSSy6J7u7umDx5clx//fWxe/fussdqaffcc09UKpVYvnx52aO0nLfffjtuvPHGmDRpUnR1dcW5554bL7/8ctljtZShoaG48847Y9asWdHV1RVnn3123H333S17/8XR0JaBefzxx2PFihWxatWq2LVrV5x//vlx9dVXx/79+8serWVs3bo1+vr6Yvv27fHcc8/Fxx9/HFdddVUcPHiw7NFa0s6dO+Ohhx6K8847r+xRWs77778fCxYsiM985jPx7LPPxl/+8pf4yU9+EqeeemrZo7WUtWvXxvr162PdunXx17/+NdauXRs//vGP4/777y97tNK05Z8pz58/Py655JJYt25dRPzn/mbTp0+PW2+9NVauXFnydK3p3XffjcmTJ8fWrVvjiiuuKHuclvLBBx/ERRddFD/96U/jRz/6UVxwwQVx3333lT1Wy1i5cmX86U9/ij/+8Y9lj9LSvvKVr8SUKVPiZz/72aF9X//616Orqyt+9atflThZedruDOajjz6KV155JRYuXHho37hx42LhwoXx0ksvlThZa6vVahERcdppp5U8Sevp6+uLa6+99rD3FP/rqaeeit7e3rjhhhti8uTJceGFF8bDDz9c9lgt5/LLL48tW7bEnj17IiLi9ddfj23btsU111xT8mTlGfWbXZ6o9957L4aGhmLKlCmH7Z8yZUr87W9/K2mq1jY8PBzLly+PBQsWxLx588oep6U89thjsWvXrti5c2fZo7Sst956K9avXx8rVqyI73//+7Fz585YunRpTJgwIW666aayx2sZK1eujHq9HrNnz46Ojo4YGhqK1atXx6JFi8oerTRtFxia19fXF2+++WZs27at7FFaysDAQCxbtiyee+65mDhxYtnjtKzh4eHo7e2NNWvWRETEhRdeGG+++WY8+OCDAvN//PrXv45HH300Nm3aFHPnzo3XXnstli9fHlOnTj1p16ntAnP66adHR0dH7Nu377D9+/btizPOOKOkqVrXkiVL4plnnokXXnhhRL8mYSx45ZVXYv/+/XHRRRcd2jc0NBQvvPBCrFu3LgYHB6Ojo6PECVvDmWeeGXPmzDls3znnnBO/+c1vSpqoNX3ve9+LlStXxre+9a2IiDj33HPjn//8Z/T395+0gWm7azATJkyIiy++OLZs2XJo3/DwcGzZsiUuu+yyEidrLUVRxJIlS+KJJ56IP/zhDzFr1qyyR2o5V155Zbzxxhvx2muvHdp6e3tj0aJF8dprr4nL/1iwYMEn/sR9z549cdZZZ5U0UWv68MMPP/EFXB0dHTE8PFzSROVruzOYiIgVK1bETTfdFL29vXHppZfGfffdFwcPHozFixeXPVrL6Ovri02bNsWTTz4Z3d3dsXfv3oj4zxcFdXV1lTxda+ju7v7ENalTTjklJk2a5FrV/3HbbbfF5ZdfHmvWrIlvfOMbsWPHjtiwYUNs2LCh7NFaynXXXRerV6+OGTNmxNy5c+PVV1+Ne++9N26++eayRytP0abuv//+YsaMGcWECROKSy+9tNi+fXvZI7WUiDjitnHjxrJHa2lf+tKXimXLlpU9Rst5+umni3nz5hWdnZ3F7Nmziw0bNpQ9Usup1+vFsmXLihkzZhQTJ04sPv/5zxc/+MEPisHBwbJHK01b/n8wALS+trsGA0B7EBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFP8PhXb3MwS3+1kAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZgAAAGdCAYAAAAv9mXmAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAUfUlEQVR4nO3df4hc9bn48WeyaTaL7A4am2jIRnOlVE38vTFowFIMilippdgfKNgI/UNWkxgoxhYNxZo1hYpgbGqkWEuNWihWK9giKcamGhKNWqWtsQjtoiRRkJkY6Sq75/tH7829+apxZrPPnjOb1wvOHx5ndh4+M5k3Z2b3nFpRFEUAwASbVvYAAExNAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAAppk/2A46NjcXbb78dvb29UavVJvvhATgCRVHE/v37Y+7cuTFt2uGPUSY9MG+//Xb09/dP9sMCMIGGh4dj3rx5h73NpAemt7d3sh8SJl2j0Sh7hI+p1+tlj/AxVVynKqric9fKe/mkB8bHYhwN+vr6yh6hI1inztXKe7kv+QFIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSjCsw9957b5x88skxc+bMWLJkSezYsWOi5wKgw7UdmEcffTRWr14da9eujV27dsVZZ50Vl156aezbty9jPgA6VK0oiqKdOyxZsiQWL14cGzZsiIj/XECsv78/brzxxlizZs1n3r/ZbFby1NMwkdr8ZzUpqngm8yquUxVV8blrNBqfeTbsto5gPvzww3jxxRdj2bJl//sDpk2LZcuWxfPPP/+J9xkZGYlms3nIBsDU11Zg3n333RgdHY05c+Ycsn/OnDmxZ8+eT7zP0NBQ1Ov1g5urWQIcHdJ/i+yWW26JRqNxcBseHs5+SAAqoK0rWh5//PHR1dUVe/fuPWT/3r1744QTTvjE+3R3d0d3d/f4JwSgI7V1BDNjxow477zzYsuWLQf3jY2NxZYtW+KCCy6Y8OEA6FxtHcFERKxevTquvfbaGBgYiPPPPz/uvvvuOHDgQCxfvjxjPgA6VNuB+eY3vxnvvPNO3HbbbbFnz544++yz4/e///3HvvgH4OjW9t/BHCl/B8PRoIp/31HFv6Wo4jpVURWfuwn/OxgAaJXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASNH2yS6nKudEak0Vz4lURVVcJ69xJpsjGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNAiullDwBHqiiKskf4mFqtVvYIHcE6TW2OYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0CKtgIzNDQUixcvjt7e3pg9e3ZceeWV8frrr2fNBkAHayswW7dujcHBwdi+fXs8/fTT8dFHH8Ull1wSBw4cyJoPgA5VK47gak3vvPNOzJ49O7Zu3RoXXXRRS/dpNptRr9fH+5BpqnjRqiqq4gWiqvjcWafWVHGdaE2j0Yi+vr7D3uaIrmjZaDQiIuK444771NuMjIzEyMjIwf9uNptH8pAAdIhxf8k/NjYWq1atiqVLl8aiRYs+9XZDQ0NRr9cPbv39/eN9SAA6yLg/Irv++uvjqaeeim3btsW8efM+9XafdARTxchU8eODKqriRxpVfO6sU2uquE60Ju0jshtuuCGefPLJePbZZw8bl4iI7u7u6O7uHs/DANDB2gpMURRx4403xmOPPRbPPPNMLFiwIGsuADpcW4EZHByMzZs3x+OPPx69vb2xZ8+eiIio1+vR09OTMiAAnamt72A+7fPSBx54IL7zne+09DP8mnJnq+Jn5lV87qxTa6q4TrRmwr+DqeILFIBqci4yAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBRHdMnkI9HKidImk5PudS7PHVSTIxgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQIrpZQ/ApyuKouwRGKdarVb2CIxTFf/dderryREMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAAp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fX2HvU1bgZkIAgPlEBgmUiuBcS4yAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBRtnU15IrVyHpvJ5JxIncs5tqCaHMEAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApJg+2Q9YFEVERDSbzcl+aKYor6XWWCcm0v+8lx/OpAdm//79ERHR398/2Q/NFFWv18seoSNYJybS/v37P/M1VStaydAEGhsbi7fffjt6e3ujVquN++c0m83o7++P4eHh6Ovrm8AJpxbr1Brr1Brr1JqpvE5FUcT+/ftj7ty5MW3a4b9lmfQjmGnTpsW8efMm7Of19fVNuScwg3VqjXVqjXVqzVRdp1aPhn3JD0AKgQEgRccGpru7O9auXRvd3d1lj1Jp1qk11qk11qk11uk/Jv1LfgCODh17BANAtQkMACkEBoAUAgNAio4NzL333hsnn3xyzJw5M5YsWRI7duwoe6RKGRoaisWLF0dvb2/Mnj07rrzyynj99dfLHqvS7rzzzqjVarFq1aqyR6mct956K6655pqYNWtW9PT0xBlnnBEvvPBC2WNVyujoaNx6662xYMGC6OnpiVNOOSVuv/32ls7ZNVV1ZGAeffTRWL16daxduzZ27doVZ511Vlx66aWxb9++skerjK1bt8bg4GBs3749nn766fjoo4/ikksuiQMHDpQ9WiXt3Lkz7rvvvjjzzDPLHqVy3nvvvVi6dGl87nOfi6eeeir++te/xk9+8pM49thjyx6tUtavXx8bN26MDRs2xN/+9rdYv359/PjHP4577rmn7NFK05G/prxkyZJYvHhxbNiwISL+c36z/v7+uPHGG2PNmjUlT1dN77zzTsyePTu2bt0aF110UdnjVMr7778f5557bvz0pz+NH/3oR3H22WfH3XffXfZYlbFmzZr485//HH/605/KHqXSvvKVr8ScOXPi5z//+cF9X//616Onpyd+9atflThZeTruCObDDz+MF198MZYtW3Zw37Rp02LZsmXx/PPPlzhZtTUajYiIOO6440qepHoGBwfj8ssvP+Q1xf964oknYmBgIK666qqYPXt2nHPOOXH//feXPVblXHjhhbFly5bYvXt3RES88sorsW3btrjssstKnqw8k36yyyP17rvvxujoaMyZM+eQ/XPmzIm///3vJU1VbWNjY7Fq1apYunRpLFq0qOxxKuWRRx6JXbt2xc6dO8sepbLefPPN2LhxY6xevTq+//3vx86dO2PFihUxY8aMuPbaa8serzLWrFkTzWYzTj311Ojq6orR0dG444474uqrry57tNJ0XGBo3+DgYLz22muxbdu2skeplOHh4Vi5cmU8/fTTMXPmzLLHqayxsbEYGBiIdevWRUTEOeecE6+99lr87Gc/E5j/49e//nU89NBDsXnz5li4cGG8/PLLsWrVqpg7d+5Ru04dF5jjjz8+urq6Yu/evYfs37t3b5xwwgklTVVdN9xwQzz55JPx7LPPTuhlEqaCF198Mfbt2xfnnnvuwX2jo6Px7LPPxoYNG2JkZCS6urpKnLAaTjzxxDj99NMP2XfaaafFb37zm5Imqqbvfe97sWbNmvjWt74VERFnnHFG/POf/4yhoaGjNjAd9x3MjBkz4rzzzostW7Yc3Dc2NhZbtmyJCy64oMTJqqUoirjhhhviscceiz/+8Y+xYMGCskeqnIsvvjheffXVePnllw9uAwMDcfXVV8fLL78sLv9t6dKlH/sV9927d8dJJ51U0kTV9MEHH3zsAlxdXV0xNjZW0kTl67gjmIiI1atXx7XXXhsDAwNx/vnnx9133x0HDhyI5cuXlz1aZQwODsbmzZvj8ccfj97e3tizZ09E/OdCQT09PSVPVw29vb0f+07qmGOOiVmzZvmu6v+46aab4sILL4x169bFN77xjdixY0ds2rQpNm3aVPZolXLFFVfEHXfcEfPnz4+FCxfGSy+9FHfddVdcd911ZY9WnqJD3XPPPcX8+fOLGTNmFOeff36xffv2skeqlIj4xO2BBx4oe7RK+9KXvlSsXLmy7DEq53e/+12xaNGioru7uzj11FOLTZs2lT1S5TSbzWLlypXF/Pnzi5kzZxb/9V//VfzgBz8oRkZGyh6tNB35dzAAVF/HfQcDQGcQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAU/w/Yuerde66UiQAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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zTpq2fnnnx///Oc/j/ua9vb26OrqOuoBwNjXVGDmz58fb7/99lHL9u3bF+ecc86IDgVA62sqMHfeeWds3749Vq9eHX//+99jw4YNsW7duujt7c2aD4AW1dQ5mIiITZs2xcqVK+Odd96JGTNmxPLly+O2225r+PW1Wi2q1WrTg1IOZfx+mtZVxnMLZdzHy7idGjkH03RgTpbAtLYy/uOjdZXxg7OM+3gZt9OIn+QHgEYJDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBSnFbXiRq5jc6or4/WHyqiM28n1rFqX7TRyHMEAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFKcVvQAtJZKpVL0CECLcAQDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUjQVmKGhobjrrrtixowZ0dHREeedd17cd999Ua/Xs+YDoEU1dT+YNWvWxNq1a2P9+vUxe/bs2LVrVyxatCiq1WosWbIka0YAWlBTgXnllVfiW9/6Vlx//fUREXHuuefGb37zm9ixY0fKcAC0rqa+Ips3b15s2bIl9u3bFxERr7/+emzbti2uu+66475mcHAwarXaUQ8Axr6mjmBWrFgRtVotZs6cGW1tbTE0NBSrVq2KhQsXHvc1fX19ce+99570oAC0lqaOYJ577rl4+umnY8OGDbFnz55Yv359/PznP4/169cf9zUrV66MgYGBI4/+/v6THhqA8qvUm/gVsO7u7lixYkX09vYeWXb//ffHU089FW+99VZDP6NWq0W1Wo2BgYHo6upqfuJTSKVSKXoETlAZf7PS/sRIauQzvKkjmE8++STGjTv6JW1tbTE8PNz8dACMaU2dg7nhhhti1apVMX369Jg9e3a89tpr8eCDD8att96aNR8ALaqpr8gOHToUd911V2zcuDEOHjwYU6dOjR/84Adx9913x/jx4xv6Gb4ia5yvNFqXr8gY6xr5DG8qMCNBYBrnA6F1CQxj3YifgwGARgkMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFE1dTXkkVavVolYN6cp43S/XR2O0OYIBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASHHaaK+wXq+P9iqBiKjVakWPwBjSyGf5qAfm0KFDo71KICKq1WrRIzCGHDp06L/uU5X6KB9SDA8Px/vvvx+dnZ1RqVRO+OfUarXo7u6O/v7+6OrqGsEJxxbbqTG2U2Nsp8aM5e1Ur9fj0KFDMXXq1Bg37ovPsoz6Ecy4ceNi2rRpI/bzurq6xtwbmMF2aozt1BjbqTFjdTs1ejTsJD8AKQQGgBQtG5j29va45557or29vehRSs12aozt1BjbqTG207+M+kl+AE4NLXsEA0C5CQwAKQQGgBQCA0CKlg3Mo48+Gueee25MmDAhrrjiitixY0fRI5VKX19fXHbZZdHZ2RmTJ0+OG2+8Md5+++2ixyq1Bx54ICqVSixbtqzoUUrnvffei5tvvjkmTZoUHR0dMXfu3Ni1a1fRY5XK0NBQ3HXXXTFjxozo6OiI8847L+67775T+vqLLRmYZ599NpYvXx733HNP7NmzJy688MK49tpr4+DBg0WPVhpbt26N3t7e2L59e7z44ovx2WefxTXXXBOHDx8uerRS2rlzZzz++ONxwQUXFD1K6Xz00Ucxf/78+NKXvhSbN2+Ov/71r/GLX/wiJk6cWPRopbJmzZpYu3ZtPPLII/G3v/0t1qxZEz/72c/i4YcfLnq0wrTkrylfccUVcdlll8UjjzwSEf+6vll3d3fccccdsWLFioKnK6cPPvggJk+eHFu3bo2rrrqq6HFK5eOPP45LLrkkfvnLX8b9998fF110UTz00ENFj1UaK1asiL/85S/x5z//uehRSu2b3/xmTJkyJX71q18dWfad73wnOjo64qmnnipwsuK03BHMp59+Grt3744FCxYcWTZu3LhYsGBBvPrqqwVOVm4DAwMREXHGGWcUPEn59Pb2xvXXX3/UPsV/vPDCC9HT0xM33XRTTJ48OS6++OJ44oknih6rdObNmxdbtmyJffv2RUTE66+/Htu2bYvrrruu4MmKM+oXuzxZH374YQwNDcWUKVOOWj5lypR46623Cpqq3IaHh2PZsmUxf/78mDNnTtHjlMozzzwTe/bsiZ07dxY9Smm9++67sXbt2li+fHn85Cc/iZ07d8aSJUti/PjxccsttxQ9XmmsWLEiarVazJw5M9ra2mJoaChWrVoVCxcuLHq0wrRcYGheb29vvPnmm7Ft27aiRymV/v7+WLp0abz44osxYcKEoscpreHh4ejp6YnVq1dHRMTFF18cb775Zjz22GMC838899xz8fTTT8eGDRti9uzZsXfv3li2bFlMnTr1lN1OLReYM888M9ra2uLAgQNHLT9w4ECcddZZBU1VXosXL45NmzbFyy+/PKK3SRgLdu/eHQcPHoxLLrnkyLKhoaF4+eWX45FHHonBwcFoa2srcMJyOPvss2PWrFlHLTv//PPjt7/9bUETldOPfvSjWLFiRXz/+9+PiIi5c+fGP/7xj+jr6ztlA9Ny52DGjx8fl156aWzZsuXIsuHh4diyZUtceeWVBU5WLvV6PRYvXhwbN26MP/3pTzFjxoyiRyqdq6++Ot54443Yu3fvkUdPT08sXLgw9u7dKy7/a/78+cf8ivu+ffvinHPOKWiicvrkk0+OuQFXW1tbDA8PFzRR8VruCCYiYvny5XHLLbdET09PXH755fHQQw/F4cOHY9GiRUWPVhq9vb2xYcOGeP7556OzszP2798fEf+6UVBHR0fB05VDZ2fnMeekTj/99Jg0aZJzVf/HnXfeGfPmzYvVq1fHd7/73dixY0esW7cu1q1bV/RopXLDDTfEqlWrYvr06TF79ux47bXX4sEHH4xbb7216NGKU29RDz/8cH369On18ePH1y+//PL69u3bix6pVCLicx9PPvlk0aOV2te//vX60qVLix6jdH7/+9/X58yZU29vb6/PnDmzvm7duqJHKp1arVZfunRpffr06fUJEybUv/rVr9Z/+tOf1gcHB4serTAt+f9gACi/ljsHA0BrEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFP8DrTXp58uUhwkAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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AEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApGjqasqjqVqtFrXqz1XG61m5TlNjyridyrg/0brKtD/9+3qSjXAEA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJDilLFeYb1eH+tVNqRWqxU9AuOI/YnRVKb96d+zNPJZPuaBOXTo0FivsiHVarXoERhH7E+MpjLuT4cOHfqvc1XqY3xIMTw8HO+//350dnZGpVI57r9Tq9Wiu7s7+vv7o6uraxQnHF9sp8bYTo2xnRoznrdTvV6PQ4cOxbRp02LChC8+yzLmRzATJkyIs88+e9T+XldX17h7AzPYTo2xnRpjOzVmvG6nRo+onOQHIIXAAJCiZQPT3t4e9957b7S3txc9SqnZTo2xnRpjOzXGdvrMmJ/kB+Dk0LJHMACUm8AAkEJgAEghMACkaNnAPPLII3HuuefGpEmT4oorrohdu3YVPVKp9PX1xdy5c6OzszOmTJkSN910U7zzzjtFj1VqDz30UFQqlViyZEnRo5TOe++9F7fccktMnjw5Ojo64oILLohXXnml6LFKZWhoKO6+++6YMWNGdHR0xHnnnRf3339/aa+/OBZaMjDPPPNMLF26NO69997Ys2dPXHTRRXHdddfFgQMHih6tNLZt2xa9vb2xc+fO2LJlS3z66adx7bXXxuHDh4serZR2794djz32WFx44YVFj1I6H374YcybNy++9KUvxebNm+Ovf/1r/PKXv4zTTjut6NFKZeXKlbF27dpYs2ZN/O1vf4uVK1fGz3/+83j44YeLHq0wLfkz5SuuuCLmzp0ba9asiYjPrm/W3d0dd955Zyxbtqzg6crp4MGDMWXKlNi2bVtcffXVRY9TKh999FFceuml8atf/SoeeOCBuPjii2P16tVFj1Uay5Yti7/85S/x5z//uehRSu2b3/xmTJ06NX7961+PLPvOd74THR0d8cQTTxQ4WXFa7gjmk08+iVdffTXmz58/smzChAkxf/78ePnllwucrNwGBgYiIuL0008veJLy6e3tjRtuuOGIfYr/eP7556OnpyduvvnmmDJlSlxyySWxfv36oscqnauuuiq2bt0ae/fujYiIN954I3bs2BHXX399wZMVZ8wvdnmiPvjggxgaGoqpU6cesXzq1Knx9ttvFzRVuQ0PD8eSJUti3rx5MWfOnKLHKZWnn3469uzZE7t37y56lNJ69913Y+3atbF06dL46U9/Grt3745FixbFxIkT49Zbby16vNJYtmxZ1Gq1mDlzZrS1tcXQ0FCsWLEiFixYUPRohWm5wNC83t7eeOutt2LHjh1Fj1Iq/f39sXjx4tiyZUtMmjSp6HFKa3h4OHp6euLBBx+MiIhLLrkk3nrrrXj00UcF5v949tln48knn4yNGzfG7Nmz4/XXX48lS5bEtGnTTtrt1HKBOeOMM6KtrS32799/xPL9+/fHmWeeWdBU5XXHHXfECy+8ENu3bx/V2ySMB6+++mocOHAgLr300pFlQ0NDsX379lizZk0MDg5GW1tbgROWw1lnnRWzZs06Ytn5558fv/3tbwuaqJx+/OMfx7Jly+L73/9+RERccMEF8c9//jP6+vpO2sC03DmYiRMnxmWXXRZbt24dWTY8PBxbt26NK6+8ssDJyqVer8cdd9wRmzZtij/96U8xY8aMokcqnWuuuSbefPPNeP3110cePT09sWDBgnj99dfF5X/NmzfvqJ+47927N84555yCJiqnjz/++KgbcLW1tcXw8HBBExWv5Y5gIiKWLl0at956a/T09MTll18eq1evjsOHD8fChQuLHq00ent7Y+PGjfHcc89FZ2dn7Nu3LyI+u1FQR0dHwdOVQ2dn51HnpE499dSYPHmyc1X/x1133RVXXXVVPPjgg/Hd7343du3aFevWrYt169YVPVqp3HjjjbFixYqYPn16zJ49O1577bVYtWpV3HbbbUWPVpx6i3r44Yfr06dPr0+cOLF++eWX13fu3Fn0SKUSEZ/7ePzxx4serdS+/vWv1xcvXlz0GKXz+9//vj5nzpx6e3t7febMmfV169YVPVLp1Gq1+uLFi+vTp0+vT5o0qf7Vr361/rOf/aw+ODhY9GiFacn/DwaA8mu5czAAtAaBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEjxP5YE8lsZHP3qAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZgAAAGdCAYAAAAv9mXmAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAUPklEQVR4nO3dfWhdhf348c9tXNMgSdC6Voup7WRQbX1OW2zBMSyKOJljuAcquAr7Q9InC2PpRi2iNXZsUrCuszKkoJ0Kw+mEbpQO6zotra2Kstk6hC0ofRAkt1aIktzfH/uu329/tfXeNp+cc9PXC+4fPb0n98M5yX1z7knOqdRqtVoAwAgbV/QAAIxNAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApzhntFxweHo4PP/ww2tvbo1KpjPbLA3AGarVaHDlyJKZMmRLjxp36GGXUA/Phhx9GV1fXaL8sACOov78/Lr744lM+Z9QD097ePtovWZeBgYGiR2gKnZ2dRY9wAvuuPmXcdzSvet7LRz0wZf1YrKOjo+gROE32HYy+et7LneQHIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASHFagXnsscdi2rRpMWHChJg7d27s2rVrpOcCoMk1HJhnn302VqxYEatXr469e/fGVVddFTfffHMcOnQoYz4AmlSlVqvVGllh7ty5MXv27Fi/fn1E/OcGYl1dXbFkyZLo7e390vWr1WopLxve4GY4a5Xxatj2XX3KuO9oXgMDA196JfOGjmA+++yz2LNnTyxYsOB/v8C4cbFgwYJ47bXXvnCdwcHBqFarxz0AGPsaCsxHH30UQ0NDMXny5OOWT548OQ4cOPCF6/T19UVnZ+exh7tZApwd0n+LbOXKlTEwMHDs0d/fn/2SAJRAQ3e0vOCCC6KlpSUOHjx43PKDBw/GhRde+IXrtLa2Rmtr6+lPCEBTaugIZvz48XHdddfFtm3bji0bHh6Obdu2xfXXXz/iwwHQvBo6gomIWLFiRdx1113R3d0dc+bMiXXr1sXRo0dj0aJFGfMB0KQaDsz3v//9OHz4cNx3331x4MCBuPrqq+NPf/rTCSf+ATi7Nfx3MGfK38E0tzL+LYV9V58y7jua14j/HQwA1EtgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApGj4YpeMnjJeO8p1v4B6OYIBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQ4p+gBaC6VSqXoERhDarVa0SPQoGq1Gp2dnXU91xEMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASNFQYPr6+mL27NnR3t4ekyZNittvvz327duXNRsATayhwGzfvj16enpi586dsXXr1vj888/jpptuiqNHj2bNB0CTqtTO4I4/hw8fjkmTJsX27dvjhhtuqGudRm5WM5rKeOMjN/dirCvjzx2n9t/38IGBgejo6Djlc8/ojpYDAwMREXH++eef9DmDg4MxODh43HAAjH2nfZJ/eHg4li9fHvPnz49Zs2ad9Hl9fX3R2dl57NHV1XW6LwlAEzntj8juueee2LJlS+zYsSMuvvjikz7vi45gyhiZMh6q+4iMsa6MP3ecWvpHZIsXL46XXnopXnnllVPGJSKitbU1WltbT+dlAGhiDQWmVqvFkiVL4vnnn4+XX345pk+fnjUXAE2uocD09PTE5s2b44UXXoj29vY4cOBARER0dnZGW1tbyoAANKeGzsGc7JzAk08+GT/60Y/q+hp+Tbl+zsEw1pXx545TSzsH45sBgHq5FhkAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNAijO6ZfKZqOdCaaPJhSXr43p09Snj95N9Vx/7buQ4ggEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApDin6AHKolarFT0Cp6lSqRQ9AqRq1u9xRzAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEgxRkF5uGHH45K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sWNH3HLLLQVPVpxRv9jlmfroo49iaGgoJk+efNzyyZMnx7vvvlvQVOU2PDwcy5cvj/nz58esWbOKHqdUnnnmmdi7d2/s3r276FFK6/33348NGzbEihUr4mc/+1ns3r07li5dGuPHj4+77rqr6PFKo7e3N6rVasyYMSNaWlpiaGgo1qxZEwsXLix6tMI0XWBoXE9PT7zzzjuxY8eOokcplf7+/li2bFls3bo1JkyYUPQ4pTU8PBzd3d3x0EMPRUTENddcE++880785je/EZj/47nnnounn346Nm/eHDNnzow333wzli9fHlOmTDlrt1PTBeaCCy6IlpaWOHjw4HHLDx48GBdeeGFBU5XX4sWL46WXXopXXnllRG+TMBbs2bMnDh06FNdee+2xZUNDQ/HKK6/E+vXrY3BwMFpaWgqcsBwuuuiiuPzyy49bdtlll8Xvf//7giYqp5/85CfR29sbP/jBDyIi4oorroh//etf0dfXd9YGpunOwYwfPz6uu+662LZt27Flw8PDsW3btrj++usLnKxcarVaLF68OJ5//vn4y1/+EtOnTy96pNK58cYb4+23344333zz2KO7uzsWLlwYb775prj8j/nz55/wK+779++PSy65pKCJyunTTz894QZcLS0tMTw8XNBExWu6I5iIiBUrVsRdd90V3d3dMWfOnFi3bl0cPXo0Fi1aVPRopdHT0xObN2+OF154Idrb2+PAgQMR8Z8bBbW1tRU8XTm0t7efcE7q3HPPjYkTJzpX9X/ce++9MW/evHjooYfie9/7XuzatSs2btwYGzduLHq0UrnttttizZo1MXXq1Jg5c2a88cYb8cgjj8Tdd99d9GjFqTWpRx99tDZ16tTa+PHja3PmzKnt3Lmz6JFKJSK+8PHkk08WPVqpfeMb36gtW7as6DFK549//GNt1qxZtdbW1tqMGTNqGzduLHqk0qlWq7Vly5bVpk6dWpswYULta1/7Wu3nP/95bXBwsOjRCtOUfwcDQPk13TkYAJqDwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACk+H+6ywBLjQHvkAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZgAAAGdCAYAAAAv9mXmAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAUJElEQVR4nO3df4jXhf3A8dfHa55H3B1m0xLPcjGw1Mo6lRQaIymixRqj/cDAGeyPOH8ljJ0bJlF2ObYIsrmUIUK5CoarCW2EYzaX4q+KYksbwXYk/gjiPmZwxd3n+8e+cxO1Ph+9133en/PxgM8fvfu87/PyfZ/7PHm/33fvd6lSqVQCAIbYqHoPAMDIJDAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQ4pLhfsHBwcE4fPhwtLa2RqlUGu6XB+ACVCqVOHHiREycODFGjfr8fZRhD8zhw4ejo6NjuF8WgCHU29sbkyZN+tznDHtgWltbh/slq9LX11fvERpCe3t7vUcACqCaz/JhD0xRD4u1tbXVewSAhlHNZ7mT/ACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApziswTz/9dFx99dUxZsyYmDNnTuzZs2eo5wKgwdUcmBdeeCFWrFgRq1evjgMHDsQNN9wQd9xxRxw7dixjPgAaVKlSqVRqWWHOnDkxa9asWLduXUT8+wZiHR0dsWTJkuju7v7C9cvlciEv+V7jZrhoFfVq2MDw6uvr+8Kr0Ne0B/Ppp5/G/v37Y/78+f/9AqNGxfz582PXrl1nXae/vz/K5fJpDwBGvpoC8+GHH8bAwEBMmDDhtOUTJkyII0eOnHWdnp6eaG9vP/VwN0uAi0P6b5GtXLky+vr6Tj16e3uzXxKAAqjpjpaXX355NDU1xdGjR09bfvTo0bjiiivOuk5zc3M0Nzef/4QANKSa9mBGjx4dN998c2zfvv3UssHBwdi+fXvccsstQz4cAI2rpj2YiIgVK1bEwoULo7OzM2bPnh1PPvlknDx5MhYtWpQxHwANqubAfPe7343jx4/HQw89FEeOHIkbb7wx/vCHP5xx4h+Ai1vNfwdzofwdTGPzdzBARMLfwQBAtQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNAipovdsnwKeJ1v4p4zTbbqXH53lWniNupGvZgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApLqn3ADSWUqlU7xEagu1UnUqlUu8RzlDE712RtlO5XI729vaqnmsPBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKSoKTA9PT0xa9asaG1tjfHjx8c999wTBw8ezJoNgAZWU2B27NgRXV1dsXv37nj11Vfjs88+i9tvvz1OnjyZNR8ADapUuYA72Rw/fjzGjx8fO3bsiFtvvbWqdWq5Wc1wKtINff6jiDc+gqHk5646RdpO//kM7+vri7a2ts997gXd0bKvry8iIi677LJzPqe/vz/6+/tPGw6Ake+8T/IPDg7G8uXLY968eTF9+vRzPq+npyfa29tPPTo6Os73JQFoIOd9iOyBBx6IV155JXbu3BmTJk065/POtgdTxMgUaRf0P4q4qw5Dyc9ddYq0ndIPkS1evDi2bdsWr7322ufGJSKiubk5mpubz+dlAGhgNQWmUqnEkiVLYuvWrfHnP/85pkyZkjUXAA2upsB0dXXFli1b4qWXXorW1tY4cuRIRES0t7dHS0tLyoAANKaazsGc69jkpk2b4gc/+EFVX8OvKVeviMeCYSj5uatOkbZT2jmYIv0jASg21yIDIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASHFBt0weSYp4gbsicj26xlXE93gRZyqiRt1O9mAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkuqfcARVGpVOo9whlKpVK9RzhDEWcCiskeDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEhxQYF5/PHHo1QqxfLly4doHABGivMOzN69e+OZZ56J66+/fijnAWCEOK/AfPzxx7FgwYLYuHFjjB07dqhnAmAEOK/AdHV1xV133RXz58//wuf29/dHuVw+7QHAyFfzLZOff/75OHDgQOzdu7eq5/f09MTDDz9c82AANLaa9mB6e3tj2bJl8dxzz8WYMWOqWmflypXR19d36tHb23tegwLQWEqVSqVS7ZN/97vfxbe+9a1oamo6tWxgYCBKpVKMGjUq+vv7T/t/Z1Mul6O9vf38J05Sw2YYNqVSqd4jAJxVX19ftLW1fe5zajpEdtttt8Xbb7992rJFixbF1KlT48c//vEXxgWAi0dNgWltbY3p06eftuzSSy+NcePGnbEcgIubv+QHIEVN52CGgnMw1XMOBiiqas7B2IMBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASFHzHS0BGF5FulZiLdeTtAcDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEhxSb0HKIpSqVTvERpCpVKp9wgNwfsJ7MEAkERgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFDUH5oMPPoj77rsvxo0bFy0tLTFjxozYt29fxmwANLCa7gfz0Ucfxbx58+LrX/96vPLKK/HlL3853nvvvRg7dmzWfAA0qJoCs3bt2ujo6IhNmzadWjZlypQhHwqAxlfTIbKXX345Ojs74957743x48fHzJkzY+PGjZ+7Tn9/f5TL5dMeAIx8NQXm/fffj/Xr18dXv/rV+OMf/xgPPPBALF26NDZv3nzOdXp6eqK9vf3Uo6Oj44KHBqD4SpUabrI+evTo6OzsjNdff/3UsqVLl8bevXtj165dZ12nv78/+vv7T/13uVwWmQZWw9vlolYqleo9AiNIkX7uyuVytLe3R19fX7S1tX3uc2vag7nyyivjuuuuO23ZtddeG//617/OuU5zc3O0tbWd9gBg5KspMPPmzYuDBw+etuzQoUNx1VVXDelQADS+mgLz4IMPxu7du+Oxxx6Lf/zjH7Fly5bYsGFDdHV1Zc0HQIOq6RxMRMS2bdti5cqV8d5778WUKVNixYoV8cMf/rDq9f9z/I7GVKRjwUXmHAxDqUg/d7Wcg6k5MBdKYBpbkd7oRSYwDKUi/dylneQHgGoJDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBSX1HsAGotrbAHVsgcDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEhxSb0HoLFUKpV6j8B5KpVK9R7hDEV8PxVxOxVxpmrYgwEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApagrMwMBArFq1KqZMmRItLS1xzTXXxCOPPFLIS24DUF813Q9m7dq1sX79+ti8eXNMmzYt9u3bF4sWLYr29vZYunRp1owANKCaAvP666/HN7/5zbjrrrsiIuLqq6+O3/zmN7Fnz56U4QBoXDUdIps7d25s3749Dh06FBERb731VuzcuTPuvPPOc67T398f5XL5tAcAI19NezDd3d1RLpdj6tSp0dTUFAMDA7FmzZpYsGDBOdfp6emJhx9++IIHBaCx1LQH8+KLL8Zzzz0XW7ZsiQMHDsTmzZvj5z//eWzevPmc66xcuTL6+vpOPXp7ey94aACKr1Sp4VfAOjo6oru7O7q6uk4te/TRR+PZZ5+Nd999t6qvUS6Xo729vfZJKQS/Mdi4SqVSvUc4QxHfT0XcTkXU19cXbW1tn/ucmvZgPvnkkxg16vRVmpqaYnBwsPbpABjRajoHc/fdd8eaNWti8uTJMW3atHjjjTfiiSeeiPvvvz9rPgAaVE2HyE6cOBGrVq2KrVu3xrFjx2LixInx/e9/Px566KEYPXp0VV/DIbLGVsRDGlSniId+ivh+KuJ2KqJqDpHVFJihIDCNrYgfCFSniB+cRXw/FXE7FdGQn4MBgGoJDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQ1XU2Z4eU6TYx03k8jmz0YAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBSXDPcLViqV4X7JhlUul+s9AsBZVfNZPuyBOXHixHC/ZMNqb2+v9wgAZ3XixIkv/IwqVYZ5l2JwcDAOHz4cra2tUSqVzvvrlMvl6OjoiN7e3mhraxvCCUcW26k6tlN1bKfqjOTtVKlU4sSJEzFx4sQYNerzz7IM+x7MqFGjYtKkSUP29dra2kbcNzCD7VQd26k6tlN1Rup2qvboipP8AKQQGABSNGxgmpubY/Xq1dHc3FzvUQrNdqqO7VQd26k6ttO/DftJfgAuDg27BwNAsQkMACkEBoAUAgNAioYNzNNPPx1XX311jBkzJubMmRN79uyp90iF0tPTE7NmzYrW1tYYP3583HPPPXHw4MF6j1Vojz/+eJRKpVi+fHm9RymcDz74IO67774YN25ctLS0xIwZM2Lfvn31HqtQBgYGYtWqVTFlypRoaWmJa665Jh555JGL+vqLDRmYF154IVasWBGrV6+OAwcOxA033BB33HFHHDt2rN6jFcaOHTuiq6srdu/eHa+++mp89tlncfvtt8fJkyfrPVoh7d27N5555pm4/vrr6z1K4Xz00Ucxb968+NKXvhSvvPJK/O1vf4tf/OIXMXbs2HqPVihr166N9evXx7p16+Lvf/97rF27Nn72s5/FU089Ve/R6qYhf015zpw5MWvWrFi3bl1E/Pv6Zh0dHbFkyZLo7u6u83TFdPz48Rg/fnzs2LEjbr311nqPUygff/xx3HTTTfHLX/4yHn300bjxxhvjySefrPdYhdHd3R1//etf4y9/+Uu9Rym0b3zjGzFhwoT49a9/fWrZt7/97WhpaYlnn322jpPVT8PtwXz66aexf//+mD9//qllo0aNivnz58euXbvqOFmx9fX1RUTEZZddVudJiqerqyvuuuuu095T/NfLL78cnZ2dce+998b48eNj5syZsXHjxnqPVThz586N7du3x6FDhyIi4q233oqdO3fGnXfeWefJ6mfYL3Z5oT788MMYGBiICRMmnLZ8woQJ8e6779ZpqmIbHByM5cuXx7x582L69On1HqdQnn/++Thw4EDs3bu33qMU1vvvvx/r16+PFStWxE9+8pPYu3dvLF26NEaPHh0LFy6s93iF0d3dHeVyOaZOnRpNTU0xMDAQa9asiQULFtR7tLppuMBQu66urnjnnXdi586d9R6lUHp7e2PZsmXx6quvxpgxY+o9TmENDg5GZ2dnPPbYYxERMXPmzHjnnXfiV7/6lcD8jxdffDGee+652LJlS0ybNi3efPPNWL58eUycOPGi3U4NF5jLL788mpqa4ujRo6ctP3r0aFxxxRV1mqq4Fi9eHNu2bYvXXnttSG+TMBLs378/jh07FjfddNOpZQMDA/Haa6/FunXror+/P5qamuo4YTFceeWVcd1115227Nprr43f/va3dZqomH70ox9Fd3d3fO9734uIiBkzZsQ///nP6OnpuWgD03DnYEaPHh0333xzbN++/dSywcHB2L59e9xyyy11nKxYKpVKLF68OLZu3Rp/+tOfYsqUKfUeqXBuu+22ePvtt+PNN9889ejs7IwFCxbEm2++KS7/b968eWf8ivuhQ4fiqquuqtNExfTJJ5+ccQOupqamGBwcrNNE9ddwezAREStWrIiFCxdGZ2dnzJ49O5588sk4efJkLFq0qN6jFUZXV1ds2bIlXnrppWhtbY0jR45ExL9vFNTS0lLn6YqhtbX1jHNSl156aYwbN865qv/x4IMPxty5c+Oxxx6L73znO7Fnz57YsGFDbNiwod6jFcrdd98da9asicmTJ8e0adPijTfeiCeeeCLuv//+eo9WP5UG9dRTT1UmT55cGT16dGX27NmV3bt313ukQomIsz42bdpU79EK7Wtf+1pl2bJl9R6jcH7/+99Xpk+fXmlubq5MnTq1smHDhnqPVDjlcrmybNmyyuTJkytjxoypfOUrX6n89Kc/rfT399d7tLppyL+DAaD4Gu4cDACNQWAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUvwfYw74vMufta0AAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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NFVrGxkZiZUrV8bixYtj/vz5ZY/TUh5//PHYtWtX7Ny5s+xRWtZbb70VGzZsiFWrVsX3v//92LlzZyxfvjymTJkSS5cuLXu8lrF69eqo1+sxd+7c6OjoiOHh4bj77rvj+uuvL3u00rRdYGhef39/vPnmm7F169ayR2kpg4ODsWLFinj++edj6tSpZY/TskZGRqKvry/Wrl0bERELFiyIN998M372s58JzH/59a9/HY8++mhs2rQp5s2bF6+99lqsXLkyZs6cecIep7YLzKmnnhodHR2xf//+o7bv378/TjvttJKmal0333xzPPvss/Hiiy+O6dckTASvvPJKHDhwIC688MIj24aHh+PFF1+M9evXx9DQUHR0dJQ4YWs4/fTT45xzzjlq29lnnx2/+c1vSpqoNX3ve9+L1atXx7e//e2IiDj33HPjn//8ZwwMDJywgWm7z2CmTJkSF110UWzevPnItpGRkdi8eXNccsklJU7WWoqiiJtvvjmefPLJ+MMf/hBz5swpe6SWc/nll8cbb7wRr7322pHV19cX119/fbz22mvi8r8WL158zK+479mzJ84444ySJmpN77///jFfwNXR0REjIyMlTVS+tjuDiYhYtWpVLF26NPr6+uLiiy+O++67Lw4fPhzLli0re7SW0d/fH5s2bYqnnnoquru7Y9++fRHx0RcFdXV1lTxda+ju7j7mM6mTTjoppk2b5rOq/3LrrbfGpZdeGmvXro1vfvObsWPHjti4cWNs3Lix7NFayjXXXBN33313zJ49O+bNmxevvvpq3HvvvXHjjTeWPVp5ijZ1//33F7Nnzy6mTJlSXHzxxcX27dvLHqmlRMTHrocffrjs0Vral7/85WLFihVlj9FynnnmmWL+/PlFZ2dnMXfu3GLjxo1lj9Ry6vV6sWLFimL27NnF1KlTiy984QvFD37wg2JoaKjs0UrTln8HA0Dra7vPYABoDwIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkOJ/AOp+4xqE6jnxAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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//uo7+ns7Iyenp4jFgDGv5YCs2DBgnj77bePWLd37944++yzR3UoANpfS4G5/fbbY/v27bF69er45z//GRs2bIh169ZFf39/1nwAtKtGi1588cXGnDlzGp2dnY1Zs2Y11q1b19L7a7VaIyIsFoullAvH9tnv8Fqt9l9f29JF/tHw2QUigDIa41+JbSftIj8ANEtgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApDil6AHgRJXx3lGVSqXoEaBwjmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMAClOKXoAjq7RaBQ9AsepjJ9dpVIpeoS2YD+NHkcwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIEVLgRkeHo4777wzZs6cGV1dXXHuuefGvffeW8pbkwNQrJaeB7NmzZpYu3ZtrF+/PmbPnh27du2KJUuWRLVajaVLl2bNCEAbaikwr7zySnzrW9+K6667LiIizjnnnPjtb38bO3bsSBkOgPbV0imy+fPnx+bNm2Pv3r0REfH666/H1q1b49prrz3qe4aGhqJerx+xADD+tXQEs3LlyqjX6zFr1qzo6OiI4eHhWLVqVSxatOio7xkYGIh77rnnhAcFoL20dATz7LPPxlNPPRUbNmyIPXv2xPr16+MXv/hFrF+//qjvueOOO6JWqx1eBgcHT3hoAMqv0mjhT8B6e3tj5cqV0d/ff3jdfffdF08++WS89dZbTf2Mer0e1Wq19UlPQv46j9FUqVSKHoFxpFarRU9PzzFf09IRzMcffxwTJhz5lo6OjhgZGWl9OgDGtZauwVx//fWxatWqmDFjRsyePTteffXVeOCBB+Lmm2/Omg+ANtXSKbKDBw/GnXfeGc8991wcOHAgpk2bFj/4wQ/irrvuiokTJzb1M5wia55TZIwmp8gYTc2cImspMKNBYJonMIwmgWE0jfo1GABolsAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABI0dLdlMezMt73y72jmuOzg3JyBANACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQ4pSx3mCj0RjrTTalXq8XPQLHyWcHY6+Z3+VjHpiDBw+O9SabUq1Wix6B4+Szg7F38ODB//rfXqUxxocUIyMj8d5770V3d3dUKpXj/jn1ej16e3tjcHAwenp6RnHC8cV+ao791Bz7qTnjeT81Go04ePBgTJs2LSZMOPZVljE/gpkwYUJMnz591H5eT0/PuPsAM9hPzbGfmmM/NWe87qdmzxq4yA9ACoEBIEXbBqazszPuvvvu6OzsLHqUUrOfmmM/Ncd+ao799B9jfpEfgJND2x7BAFBuAgNACoEBIIXAAJCibQPzyCOPxDnnnBOTJk2KefPmxY4dO4oeqVQGBgbi8ssvj+7u7pgyZUrccMMN8fbbbxc9Vqndf//9UalUYvny5UWPUjrvvvtu3HTTTTF58uTo6uqKCy64IHbt2lX0WKUyPDwcd955Z8ycOTO6urri3HPPjXvvvbe0918cC20ZmGeeeSZWrFgRd999d+zZsycuuuiiuOaaa+LAgQNFj1YaW7Zsif7+/ti+fXts2rQpPv3007j66qvj0KFDRY9WSjt37ozHHnssLrzwwqJHKZ0PP/wwFixYEF/60pdi48aN8be//S1++ctfxmmnnVb0aKWyZs2aWLt2bTz88MPx97//PdasWRM///nP46GHHip6tMK05Z8pz5s3Ly6//PJ4+OGHI+I/9zfr7e2N2267LVauXFnwdOX0/vvvx5QpU2LLli1x5ZVXFj1OqXz00Udx6aWXxq9+9au477774uKLL44HH3yw6LFKY+XKlfHXv/41/vKXvxQ9Sql985vfjKlTp8avf/3rw+u+853vRFdXVzz55JMFTlactjuC+eSTT2L37t2xcOHCw+smTJgQCxcujG3bthU4WbnVarWIiDj99NMLnqR8+vv747rrrjviO8X/eeGFF6Kvry9uvPHGmDJlSlxyySXx+OOPFz1W6cyfPz82b94ce/fujYiI119/PbZu3RrXXnttwZMVZ8xvdnmiPvjggxgeHo6pU6cesX7q1Knx1ltvFTRVuY2MjMTy5ctjwYIFMWfOnKLHKZWnn3469uzZEzt37ix6lNJ65513Yu3atbFixYr46U9/Gjt37oylS5fGxIkTY/HixUWPVxorV66Mer0es2bNio6OjhgeHo5Vq1bFokWLih6tMG0XGFrX398fb775ZmzdurXoUUplcHAwli1bFps2bYpJkyYVPU5pjYyMRF9fX6xevToiIi655JJ4880349FHHxWY/+fZZ5+Np556KjZs2BCzZ8+O1157LZYvXx7Tpk07afdT2wXmjDPOiI6Ojti/f/8R6/fv3x9nnnlmQVOV16233hovvfRSvPzyy6P6mITxYPfu3XHgwIG49NJLD68bHh6Ol19+OR5++OEYGhqKjo6OAicsh7POOivOP//8I9add9558bvf/a6gicrpxz/+caxcuTK+//3vR0TEBRdcEP/6179iYGDgpA1M212DmThxYlx22WWxefPmw+tGRkZi8+bNccUVVxQ4Wbk0Go249dZb47nnnos//elPMXPmzKJHKp2rrroq3njjjXjttdcOL319fbFo0aJ47bXXxOV/LViw4HN/4r537944++yzC5qonD7++OPPPYCro6MjRkZGCpqoeG13BBMRsWLFili8eHH09fXF3Llz48EHH4xDhw7FkiVLih6tNPr7+2PDhg3x/PPPR3d3d+zbty8i/vOgoK6uroKnK4fu7u7PXZM69dRTY/Lkya5V/T+33357zJ8/P1avXh3f/e53Y8eOHbFu3bpYt25d0aOVyvXXXx+rVq2KGTNmxOzZs+PVV1+NBx54IG6++eaiRytOo0099NBDjRkzZjQmTpzYmDt3bmP79u1Fj1QqEfGFyxNPPFH0aKX29a9/vbFs2bKixyidF198sTFnzpxGZ2dnY9asWY1169YVPVLp1Ov1xrJlyxozZsxoTJo0qfHVr3618bOf/awxNDRU9GiFacv/DwaA8mu7azAAtAeBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEjxP/rpqnRGyJRmAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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ozoUAONAK9dgtm/fXkyePLlYt25d8c477xSPPfZY8fnPf7549NFHm/4a9Xq99PcOLcuyrJNbzVyDaSkwRVEUzz33XDF//vyis7OzmDt3brFp06aWni8wlmVZ7b9G/SL/aGg0GtHb2zuWuwRglI36RX4AaJbAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASDG57AHgZI3x7fTaVq1WK3uEtuD76fhauZ+kMxgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQIrJZQ/AsRVFUfYIR6nVamWPcJQqzlTF147mVPH7qV05gwEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApWgrM8PBwrFmzJubMmRNdXV1xzjnnxJ133unW5AAcpaXPg9mwYUM88MAD8atf/SrmzZsXO3fujKVLl0Zvb28sW7Ysa0YA2lBLgXnllVfia1/7Wlx33XUREXH22WfHE088Edu3b08ZDoD21dJbZFdccUVs3rw59uzZExERb7zxRmzdujWuvfbaYz5naGgoGo3GEQuACaBowfDwcHH77bcXtVqtmDx5clGr1Yq77rrruM9Zu3ZtERHWCawqKvuYtMuqorKPiTW+Vr1e/+zvuVa+QZ944oli1qxZxRNPPFH8+c9/Ln79618Xp512WvHII48c8zn/+te/inq9fngNDg6WfmDaZVVR2cekXVYVlX1MrPG1Rj0ws2bNKjZu3HjEtjvvvLP40pe+1PTXqNfrpR+YdllVVPYxaZdVRWUfE2t8rWYC09I1mI8++igmTTryKR0dHTEyMtLKlwFgAmjpt8iuv/76WLduXcyePTvmzZsXr732Wtxzzz1xyy23ZM0HQJuq/efUuSkHDx6MNWvWxNNPPx0HDhyImTNnxne+85244447YsqUKU19jUajEb29vSc88ETSwkszZmq1WtkjtAWvHeNdvV6Pnp6e4z6mpcCMBoFpnh9S7ctrx3jXTGDciwyAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEgRUt3Ux5NzdzHZqJz7yignTmDASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEgxeax3WBRFREQ0Go2x3jWMGd/fjHf//Vl+PGMemIMHD0ZERF9f31jvGsZMb29v2SNAqoMHD37m93mtaCZDo2hkZCT27t0b3d3dUavVTvjrNBqN6Ovri8HBwejp6RnFCccXx6k5jlNzHKfmjOfjVBRFHDx4MGbOnBmTJh3/KsuYn8FMmjQpZs2aNWpfr6enZ9y9gBkcp+Y4Ts1xnJozXo9Ts2foLvIDkEJgAEjRtoHp7OyMtWvXRmdnZ9mjVJrj1BzHqTmOU3Mcp38b84v8AEwMbXsGA0C1CQwAKQQGgBQCA0CKtg3M/fffH2effXZMnTo1Fi5cGNu3by97pEpZv359LFiwILq7u2P69Olxww03xNtvv132WJV29913R61WixUrVpQ9SuW8++67cdNNN8W0adOiq6srzj///Ni5c2fZY1XK8PBwrFmzJubMmRNdXV1xzjnnxJ133tnUPbvGq7YMzFNPPRUrV66MtWvXxu7du+PCCy+Ma665Jg4cOFD2aJWxZcuWGBgYiFdffTVefPHF+OSTT+Lqq6+OQ4cOlT1aJe3YsSMefPDBuOCCC8oepXI++OCDWLRoUXzuc5+LF154If7yl7/Ez372szj11FPLHq1SNmzYEA888EBs3Lgx/vrXv8aGDRvipz/9adx3331lj1aatvw15YULF8aCBQti48aNEfHv+5v19fXFbbfdFqtWrSp5ump67733Yvr06bFly5a48soryx6nUj788MO45JJL4uc//3n85Cc/iYsuuijuvffesseqjFWrVsWf/vSn+OMf/1j2KJX21a9+NWbMmBG//OUvD2/7xje+EV1dXfHoo4+WOFl52u4M5uOPP45du3bF4sWLD2+bNGlSLF68OLZt21biZNVWr9cjIuK0004reZLqGRgYiOuuu+6I7yn+17PPPhv9/f1x4403xvTp0+Piiy+Ohx56qOyxKueKK66IzZs3x549eyIi4o033oitW7fGtddeW/Jk5Rnzm12erPfffz+Gh4djxowZR2yfMWNG/O1vfytpqmobGRmJFStWxKJFi2L+/Pllj1MpTz75ZOzevTt27NhR9iiV9fe//z0eeOCBWLlyZfzwhz+MHTt2xLJly2LKlClx8803lz1eZaxatSoajUbMnTs3Ojo6Ynh4ONatWxdLliwpe7TStF1gaN3AwEC89dZbsXXr1rJHqZTBwcFYvnx5vPjiizF16tSyx6mskZGR6O/vj7vuuisiIi6++OJ466234he/+IXA/B+/+c1v4rHHHovHH3885s2bF6+//nqsWLEiZs6cOWGPU9sF5vTTT4+Ojo7Yv3//Edv3798fZ5xxRklTVdett94azz//fLz88suj+jEJ48GuXbviwIEDcckllxzeNjw8HC+//HJs3LgxhoaGoqOjo8QJq+HMM8+M884774ht5557bvz2t78taaJq+sEPfhCrVq2Kb3/72xERcf7558c//vGPWL9+/YQNTNtdg5kyZUpceumlsXnz5sPbRkZGYvPmzXH55ZeXOFm1FEURt956azz99NPxhz/8IebMmVP2SJVz1VVXxZtvvhmvv/764dXf3x9LliyJ119/XVz+Y9GiRUf9ivuePXvirLPOKmmiavroo4+O+gCujo6OGBkZKWmi8rXdGUxExMqVK+Pmm2+O/v7+uOyyy+Lee++NQ4cOxdKlS8serTIGBgbi8ccfj2eeeSa6u7tj3759EfHvDwrq6uoqebpq6O7uPuqa1CmnnBLTpk1zrer/+P73vx9XXHFF3HXXXfHNb34ztm/fHps2bYpNmzaVPVqlXH/99bFu3bqYPXt2zJs3L1577bW455574pZbbil7tPIUbeq+++4rZs+eXUyZMqW47LLLildffbXskSolIj51Pfzww2WPVmlf/vKXi+XLl5c9RuU899xzxfz584vOzs5i7ty5xaZNm8oeqXIajUaxfPnyYvbs2cXUqVOLL37xi8WPfvSjYmhoqOzRStOWfwcDQPW13TUYANqDwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACk+B9xItMN/mH9wgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZgAAAGdCAYAAAAv9mXmAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAUPklEQVR4nO3dbYxUhdn44XtYy7AxuxPFghIXoX5BAV8XiJLYNBKNoaY2ja0NJhS/NSuCJKZLGyTG4krTGhKxVkhDSQpVk8b6ktjE0IilSkBRo2krbZrYjYQXEzODmKxmd/4f+pTn4Q/qDOy9Z2a5ruR88Diz587sYX45c3bOKdXr9XoAwCibUPQAAIxPAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApzhnrDY6MjMSBAweiq6srSqXSWG8egDNQr9fj6NGjMW3atJgw4YuPUcY8MAcOHIienp6x3iwAo2hwcDAuvvjiL3zMmAemq6trrDcJRES1Wi16BMaBWq0WPT09Db2Xj3lgfCwGxeju7i56BMaRRt7LneQHIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASHFagXnsscdixowZMWnSpFiwYEHs2bNntOcCoM01HZinnnoqVq1aFWvXro19+/bFlVdeGTfffHMcPnw4Yz4A2lSpXq/Xm3nCggULYt68ebFx48aI+M8NxHp6emL58uXR39//pc+v1WpRqVROb1rgtDX5Tx1O6b/v4dVq9Uuv0N3UEcynn34ab7zxRixatOh/f8CECbFo0aJ47bXXTvmcoaGhqNVqJywAjH9NBebDDz+M4eHhmDp16gnrp06dGgcPHjzlcwYGBqJSqRxf3M0S4OyQ/ldkq1evjmq1enwZHBzM3iQALaCpO1pecMEF0dHREYcOHTph/aFDh+LCCy885XPK5XKUy+XTnxCAttTUEczEiRPj2muvjR07dhxfNzIyEjt27Ijrrrtu1IcDoH01dQQTEbFq1apYunRp9Pb2xvz582PDhg1x7NixWLZsWcZ8ALSppgPzve99L44cORL3339/HDx4MK666qr44x//eNKJfwDObk1/D+ZM+R4MFMP3YBgNad+DAYBGCQwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUTV/skrHj2lHtq1QqFT1CW2jF18m/u9HjCAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkOKcogcAxkapVCp6hJPU6/WiRyCRIxgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQoqnADAwMxLx586KrqyumTJkSt912W7z33ntZswHQxpoKzM6dO6Ovry92794dL730Unz22Wdx0003xbFjx7LmA6BNlepncMefI0eOxJQpU2Lnzp1xww03NPScWq0WlUrldDd5VnEzpvbVijf3akX28fbz3/fwarUa3d3dX/jYM7qjZbVajYiI888//3MfMzQ0FENDQycMB8D4d9on+UdGRmLlypWxcOHCmDNnzuc+bmBgICqVyvGlp6fndDcJQBs57Y/IfvjDH8aLL74Yu3btiosvvvhzH3eqIxiRaYyPD9qXj8gaYx9vP+kfkd19993xwgsvxCuvvPKFcYmIKJfLUS6XT2czALSxpgJTr9dj+fLl8cwzz8TLL78cM2fOzJoLgDbXVGD6+vpi+/bt8eyzz0ZXV1ccPHgwIiIqlUp0dnamDAhAe2rqHMznfa68ZcuW+MEPftDQz/Bnyo3z+XT7cg6mMfbx9pN2DsbOAECjXIsMgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIMUZ3TKZs4+LODKa7E+NadfrQDqCASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkOKeoDVer1eju7i5q8ycplUpFj9AW6vV60SOcxO+O0WQfHz2OYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0CKMwrMww8/HKVSKVauXDlK4wAwXpx2YPbu3RtPPPFEXHHFFaM5DwDjxGkF5uOPP44lS5bE5s2b47zzzhvtmQAYB04rMH19fbF48eJYtGjRlz52aGgoarXaCQsA41/Tt0x+8sknY9++fbF3796GHj8wMBAPPPBA04MB0N6aOoIZHByMFStWxLZt22LSpEkNPWf16tVRrVaPL4ODg6c1KADtpVSv1+uNPvgPf/hDfPvb346Ojo7j64aHh6NUKsWECRNiaGjohP93KrVaLSqVSlSr1eju7j79yUdZqVQqeoSTNPGrOau14u+O9tWK/+5acR9v5D28qY/IbrzxxnjnnXdOWLds2bKYNWtW/OhHP/rSuABw9mgqMF1dXTFnzpwT1p177rkxefLkk9YDcHbzTX4AUjT9V2T/v5dffnkUxgBgvHEEA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJDijK9FRp5WvAcEjHet+O+ule5R8997ejXCEQwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIMU5RQ8AwBcrlUpFj3BaHMEAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFE0H5oMPPog777wzJk+eHJ2dnTF37tx4/fXXM2YDoI01dT+Yjz76KBYuXBjf+MY34sUXX4yvfvWr8Y9//CPOO++8rPkAaFNNBWb9+vXR09MTW7ZsOb5u5syZoz4UAO2vqY/Innvuuejt7Y3bb789pkyZEldffXVs3rz5C58zNDQUtVrthAWAs0C9CeVyuV4ul+urV6+u79u3r/7EE0/UJ02aVP/Nb37zuc9Zu3ZtPSJOWqrVajObTneqGS0Wi8Vy6qWR9/DS/7y5NmTixInR29sbr7766vF199xzT+zduzdee+21Uz5naGgohoaGjv93rVaLnp6eqFar0d3d3eim07XrPa8BitDIe3hTH5FddNFFcfnll5+w7rLLLot///vfn/uccrkc3d3dJywAjH9NBWbhwoXx3nvvnbBu//79cckll4zqUAC0v6YCc++998bu3bvjoYcein/+85+xffv22LRpU/T19WXNB0C7avZk+PPPP1+fM2dOvVwu12fNmlXftGlTU8+vVqsNnyAaS9ECJ80sFoulXZZRP8k/Gmq1WlQqFSf5AdrYqJ/kB4BGCQwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAU5xS14UqlUtSmGWfG+HJ6bcv19hhrjmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACnOKWrD1Wo1uru7i9p8WyiVSkWP0BZa8XWq1+tFj3CSVpypFX93raiVfne1Wi0qlUpDj3UEA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFI0FZjh4eFYs2ZNzJw5Mzo7O+PSSy+NBx98sKUuJQ1Aa2jqfjDr16+Pxx9/PLZu3RqzZ8+O119/PZYtWxaVSiXuueeerBkBaENNBebVV1+Nb33rW7F48eKIiJgxY0b87ne/iz179qQMB0D7auojsuuvvz527NgR+/fvj4iIt99+O3bt2hW33HLL5z5naGgoarXaCQsA419TRzD9/f1Rq9Vi1qxZ0dHREcPDw7Fu3bpYsmTJ5z5nYGAgHnjggTMeFID20tQRzNNPPx3btm2L7du3x759+2Lr1q3x85//PLZu3fq5z1m9enVUq9Xjy+Dg4BkPDUDra+oI5r777ov+/v644447IiJi7ty58f7778fAwEAsXbr0lM8pl8tRLpfPfFIA2kpTRzCffPJJTJhw4lM6OjpiZGRkVIcCoP01dQRz6623xrp162L69Okxe/bsePPNN+ORRx6Ju+66K2s+ANpUqd7EtySPHj0aa9asiWeeeSYOHz4c06ZNi+9///tx//33x8SJExv6GbVaLSqVSlSr1eju7j7twc8GpVKp6BE4Tb583Bj7eGNaaX9q5j28qcCMBoFpnH987auV3hBamX28Ma20PzXzHu5aZACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApmrqa8miqVCpFbfqUWulaP7S/VrzGln28fbXi/tQIRzAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKc4Z6w3W6/Wx3mRDarVa0SNAKvs4o6mR9/IxD8zRo0fHepMNqVQqRY8AqezjjKajR49+6T5Vqo/xIcXIyEgcOHAgurq6olQqnfbPqdVq0dPTE4ODg9Hd3T2KE44vXqfGeJ0a43VqzHh+ner1ehw9ejSmTZsWEyZ88VmWMT+CmTBhQlx88cWj9vO6u7vH3S8wg9epMV6nxnidGjNeX6dGj4ad5AcghcAAkKJtA1Mul2Pt2rVRLpeLHqWleZ0a43VqjNepMV6n/xjzk/wAnB3a9ggGgNYmMACkEBgAUggMACnaNjCPPfZYzJgxIyZNmhQLFiyIPXv2FD1SSxkYGIh58+ZFV1dXTJkyJW677bZ47733ih6rpT388MNRKpVi5cqVRY/Scj744IO48847Y/LkydHZ2Rlz586N119/veixWsrw8HCsWbMmZs6cGZ2dnXHppZfGgw8+2LLXXxwLbRmYp556KlatWhVr166Nffv2xZVXXhk333xzHD58uOjRWsbOnTujr68vdu/eHS+99FJ89tlncdNNN8WxY8eKHq0l7d27N5544om44oorih6l5Xz00UexcOHC+MpXvhIvvvhi/PWvf41f/OIXcd555xU9WktZv359PP7447Fx48b429/+FuvXr4+f/exn8eijjxY9WmHa8s+UFyxYEPPmzYuNGzdGxH+ub9bT0xPLly+P/v7+gqdrTUeOHIkpU6bEzp0744Ybbih6nJby8ccfxzXXXBO//OUv46c//WlcddVVsWHDhqLHahn9/f3xl7/8Jf785z8XPUpL++Y3vxlTp06NX//618fXfec734nOzs747W9/W+BkxWm7I5hPP/003njjjVi0aNHxdRMmTIhFixbFa6+9VuBkra1arUZExPnnn1/wJK2nr68vFi9efMI+xf967rnnore3N26//faYMmVKXH311bF58+aix2o5119/fezYsSP2798fERFvv/127Nq1K2655ZaCJyvOmF/s8kx9+OGHMTw8HFOnTj1h/dSpU+Pvf/97QVO1tpGRkVi5cmUsXLgw5syZU/Q4LeXJJ5+Mffv2xd69e4sepWX961//iscffzxWrVoVP/7xj2Pv3r1xzz33xMSJE2Pp0qVFj9cy+vv7o1arxaxZs6KjoyOGh4dj3bp1sWTJkqJHK0zbBYbm9fX1xbvvvhu7du0qepSWMjg4GCtWrIiXXnopJk2aVPQ4LWtkZCR6e3vjoYceioiIq6++Ot5999341a9+JTD/x9NPPx3btm2L7du3x+zZs+Ott96KlStXxrRp087a16ntAnPBBRdER0dHHDp06IT1hw4digsvvLCgqVrX3XffHS+88EK88soro3qbhPHgjTfeiMOHD8c111xzfN3w8HC88sorsXHjxhgaGoqOjo4CJ2wNF110UVx++eUnrLvsssvi97//fUETtab77rsv+vv744477oiIiLlz58b7778fAwMDZ21g2u4czMSJE+Paa6+NHTt2HF83MjISO3bsiOuuu67AyVpLvV6Pu+++O5555pn405/+FDNnzix6pJZz4403xjvvvBNvvfXW8aW3tzeWLFkSb731lrj8j4ULF570J+779++PSy65pKCJWtMnn3xy0g24Ojo6YmRkpKCJitd2RzAREatWrYqlS5dGb29vzJ8/PzZs2BDHjh2LZcuWFT1ay+jr64vt27fHs88+G11dXXHw4MGI+M+Ngjo7OwuerjV0dXWddE7q3HPPjcmTJztX9X/ce++9cf3118dDDz0U3/3ud2PPnj2xadOm2LRpU9GjtZRbb7011q1bF9OnT4/Zs2fHm2++GY888kjcddddRY9WnHqbevTRR+vTp0+vT5w4sT5//vz67t27ix6ppUTEKZctW7YUPVpL+/rXv15fsWJF0WO0nOeff74+Z86cerlcrs+aNau+adOmokdqObVarb5ixYr69OnT65MmTap/7Wtfq//kJz+pDw0NFT1aYdryezAAtL62OwcDQHsQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAU/w9iM4lL13utkAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZgAAAGdCAYAAAAv9mXmAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAUf0lEQVR4nO3dbYhchdn44XuyNput7A4am2hwo6kUYhLfV0UDlmJQxEotxb4QIY3QD7IxiYHS2KIiGteUVgS10UgrAU1VKNYXsEVSTJqakDcVpTVpEdpFSaIgMzHCKrvzfOi/+zz5J7Ezyd57zmyuC84HjzN7bs6ZnR/nnM1MpdFoNAIAxtikogcAYGISGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEhx0nhvcGRkJD744IPo7u6OSqUy3psH4Dg0Go04cOBAzJgxIyZN+uJzlHEPzAcffBC9vb3jvVkAxtDg4GCceeaZX/iYcQ9Md3d3RPx7uJ6envHe/FFVq9WiRzhMrVYreoS2UMZjV0ZlfD05ds0p07Gr1+vR29s7+l7+RcY9MP+5LNbT01OqwJSR/cNY8npqX2U8ds3c4nCTH4AUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASDFMQXm0UcfjbPPPjumTJkSl19+eWzbtm2s5wKgzbUcmGeffTZWrFgRd999d+zatSsuuOCCuPbaa2P//v0Z8wHQploOzIMPPhg/+tGPYvHixTFnzpx47LHH4stf/nL85je/yZgPgDbVUmA+++yz2LlzZyxYsOB/f8CkSbFgwYLYsmXLEZ8zNDQU9Xr9kAWAia+lwHz00UcxPDwc06dPP2T99OnTY+/evUd8zsDAQFSr1dHFt1kCnBjS/4rsjjvuiFqtNroMDg5mbxKAEmjpGy1PO+206OjoiH379h2yft++fXH66acf8TmdnZ3R2dl57BMC0JZaOoOZPHlyXHLJJbFhw4bRdSMjI7Fhw4a44oorxnw4ANpXS2cwERErVqyIRYsWRV9fX1x22WXx0EMPxcGDB2Px4sUZ8wHQploOzPe+97348MMP46677oq9e/fGhRdeGH/4wx8Ou/EPwImt0mg0GuO5wXq9HtVqNWq1WvT09Iznpr9QpVIpeoTDjPOhaVtlPHZlVMbXk2PXnDIdu1bew30WGQApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0CKlj/skhNbGT87qkyf0/QfZdxPtK92fT05gwEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApDip6AHKotFoFD3CYSqVStEjcIy8nppjP01szmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNAipYCMzAwEJdeeml0d3fHtGnT4sYbb4zdu3dnzQZAG2spMBs3boz+/v7YunVrvPrqq/H555/HNddcEwcPHsyaD4A2VWkcxzf+fPjhhzFt2rTYuHFjXHXVVU09p16vR7VajVqtFj09Pce66ROCLz5qThm/tKqMyvh6KuOxK+N+KqNm3sOP6xsta7VaRESceuqpR33M0NBQDA0Njf53vV4/nk0C0CaO+Sb/yMhILF++PObPnx/z5s076uMGBgaiWq2OLr29vce6SQDayDFfIrv11lvjlVdeic2bN8eZZ5551Mcd6Qymt7fXJbImOFVvThkvs5RRGV9PZTx2ZdxPZZR2iWzJkiXx8ssvx6ZNm74wLhERnZ2d0dnZeSybAaCNtRSYRqMRt912Wzz//PPx2muvxaxZs7LmAqDNtRSY/v7+WL9+fbzwwgvR3d0de/fujYiIarUaXV1dKQMC0J5augdztGuTTz75ZPzwhz9s6mf4M+XmuRbcnDJexy+jMr6eynjsyrifymjM78GU8cUAQDn5LDIAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFMf1lckTiQ+4Yyx5PYEzGACSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNAipOKHoCjazQaRY/QFiqVStEjcIzKeOzK+HtXxv3UDGcwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIMVxBeaBBx6ISqUSy5cvH6NxAJgojjkw27dvj8cffzzOP//8sZwHgAnimALzySefxMKFC+OJJ56IU045ZaxnAmACOKbA9Pf3x/XXXx8LFiz4r48dGhqKer1+yALAxNfyVyY/88wzsWvXrti+fXtTjx8YGIh77rmn5cEAaG8tncEMDg7GsmXL4umnn44pU6Y09Zw77rgjarXa6DI4OHhMgwLQXiqNRqPR7IN///vfx7e//e3o6OgYXTc8PByVSiUmTZoUQ0NDh/y/I6nX61GtVqNWq0VPT8+xTz7GKpVK0SMcpoVDc0Ir47GjfZXx966Mr/Fm3sNbukR29dVXx9tvv33IusWLF8fs2bPjJz/5yX+NCwAnjpYC093dHfPmzTtk3cknnxxTp049bD0AJzb/kh+AFC3/Fdn/77XXXhuDMQCYaJzBAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQ47s8iI08ZvwMCJjq/d2PHGQwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIMVJRQ8AwBdrNBpFjzCqXq9HtVpt6rHOYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0CKlgPz/vvvx8033xxTp06Nrq6uOO+882LHjh0ZswHQxlr6PpiPP/445s+fH9/4xjfilVdeia985Svx97//PU455ZSs+QBoUy0FZvXq1dHb2xtPPvnk6LpZs2aN+VAAtL+WLpG9+OKL0dfXFzfddFNMmzYtLrroonjiiSe+8DlDQ0NRr9cPWQCY+FoKzHvvvRdr1qyJr33ta/HHP/4xbr311li6dGmsW7fuqM8ZGBiIarU6uvT29h730ACUX6XRwpc9T548Ofr6+uL1118fXbd06dLYvn17bNmy5YjPGRoaiqGhodH/rtfr0dvbG7VaLXp6eo5j9LFVqVSKHgHgiFp4m05Xr9ejWq029R7e0hnMGWecEXPmzDlk3bnnnhv/+te/jvqczs7O6OnpOWQBYOJrKTDz58+P3bt3H7Juz549cdZZZ43pUAC0v5YCc/vtt8fWrVvj/vvvj3/84x+xfv36WLt2bfT392fNB0C7arTopZdeasybN6/R2dnZmD17dmPt2rUtPb9WqzUiolGr1VrddKqIsFgsllIuZdLKe3hLN/nHQis3iMaTm/xAWY3z2/QXSrvJDwDNEhgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApTipqw9VqtahNH1GZPuvnP3w+WnPKeOxojtf4xOYMBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQQmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNACoEBIIXAAJBCYABIITAApBAYAFIIDAApBAaAFAIDQAqBASCFwACQ4qSiNlyr1aKnp6eozUOqSqVS9AiHaTQaRY/AMSrj66kZzmAASCEwAKQQGABSCAwAKQQGgBQCA0AKgQEghcAAkEJgAEghMACkEBgAUggMACkEBoAUAgNAipYCMzw8HHfeeWfMmjUrurq64pxzzol7773Xx4ADcJiWvg9m9erVsWbNmli3bl3MnTs3duzYEYsXL45qtRpLly7NmhGANtRSYF5//fX41re+Fddff31ERJx99tnx29/+NrZt25YyHADtq6VLZFdeeWVs2LAh9uzZExERb731VmzevDmuu+66oz5naGgo6vX6IQsAE19LZzArV66Mer0es2fPjo6OjhgeHo5Vq1bFwoULj/qcgYGBuOeee457UADaS0tnMM8991w8/fTTsX79+ti1a1esW7cufvGLX8S6deuO+pw77rgjarXa6DI4OHjcQwNQfpVGC38C1tvbGytXroz+/v7Rdffdd1889dRT8e677zb1M+r1elSr1ajVatHT09P6xCeQSqVS9AhtoYx/xVjGY2c/MZaaeQ9v6Qzm008/jUmTDn1KR0dHjIyMtD4dABNaS/dgbrjhhli1alXMnDkz5s6dG2+88UY8+OCDccstt2TNB0CbaukS2YEDB+LOO++M559/Pvbv3x8zZsyIH/zgB3HXXXfF5MmTm/oZLpE1z+WD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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Tue Sep 27 14:02:07 2016\n",
        "Modified 28 October 2022\n",
        "\n",
        "@author: pcutter\n",
        "\n",
        "Program Description:  This program implements Conway's game of life.eeeee\n",
        "\n",
        "\"\"\"\n",
        "import random\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def loadWorld(wsize, whichone):\n",
        "  world = generateWorld(wsize, 0) # generates an empty world\n",
        "  if whichone == 1:\n",
        "    insertList = [[1, 0, 0],\n",
        "                  [0, 1, 1],\n",
        "                  [1, 1, 0]]\n",
        "  elif whichone == 2:\n",
        "    insertList = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n",
        "                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n",
        "                  [1, 1, 1, 0, 0, 0, 1, 1, 1, 0],\n",
        "                  [0, 0, 0, 0, 0, 0, 0, 1, 1, 1]]\n",
        "  elif whichone == 3:\n",
        "    X = np.zeros((17, 17))\n",
        "    X[2, 4:7] = 1\n",
        "    X[4:7, 7] = 1\n",
        "    X += X.T\n",
        "    X += X[:, ::-1]\n",
        "    X += X[::-1, :]\n",
        "    world = list(X)\n",
        "    return world\n",
        "  for r in range(len(insertList)):\n",
        "    for c in range(len(insertList[0])):\n",
        "      world[r][c] = insertList[r][c]\n",
        "  return world\n",
        "\n",
        "\"\"\" This function randomly generates a world for Conway's game of life.\n",
        "PARAMETERS:\n",
        "    wsize - The world is represented by a wsize x wsize list\n",
        "    p1 - Proportion of cells that should be 1 (alive) when the program starts\n",
        "\n",
        "RETURNS:\n",
        "    world - A wsize x wsize list of 1s and 0s\n",
        "\"\"\"\n",
        "def generateWorld(wsize, p1):\n",
        "    world = []\n",
        "    for i in range(wsize):\n",
        "      world.append(random.choices([0,1],weights=(1-p1,p1),k=wsize))\n",
        "    printWorld(world)\n",
        "    return world\n",
        "\n",
        "\"\"\" This function prints a 2d list of 0s and 1s in rows and columns.\n",
        "PARAMETERS:\n",
        "    world - a list of 0s and 1s\n",
        "\"\"\"\n",
        "def printWorld(world):\n",
        "  for line in world:\n",
        "    print(line)\n",
        "\n",
        "\n",
        "\"\"\" This function displays a list of 2d worlds of 0s and 1s as black and white squares.\n",
        "PARAMETERS:\n",
        "    worlds - a list of worlds of 0s and 1s\n",
        "\"\"\"\n",
        "def displayWorld(worlds):\n",
        "    for world in worlds:\n",
        "        plt.imshow(world,cmap=plt.cm.gray)\n",
        "        plt.show()\n",
        "        plt.pause(0.1)\n",
        "        plt.close()\n",
        "\n",
        "\"\"\" This function counts the number of 1s among the eight neighbors\n",
        "    of cell at world[row][col].  Neighborhoods wrap at the edges of the list.\n",
        "PARAMETERS:\n",
        "    world - a 2d list of 0s and 1s\n",
        "    row, col - the position in the world to check\n",
        "RETURNS:\n",
        "    numNeighbors - the number of neighbors equal to 1\n",
        "\"\"\"\n",
        "\n",
        "def countNeighbors(world, row, col):\n",
        "    # Determine the number of rows and cols in the world.\n",
        "    rows = len(world)\n",
        "    cols = len(world[0])\n",
        "\n",
        "    # Determine what the next and previous row and column are\n",
        "    # If the specified cell is on the border, its neighborhood\n",
        "    # will wrap to the other border\n",
        "    nextRow = (row+1)%rows\n",
        "    prevRow = (row-1)%rows\n",
        "    nextCol = (col+1)%cols\n",
        "    prevCol = (col-1)%cols\n",
        "\n",
        "    # COMPLETE THE CODE BELOW TO CALCULATE THE NUMBER OF NEIGHBORS THAT ARE 1s.\n",
        "    # Add the three neighbor cells in the previous row to numNeighbors\n",
        "    numNeighbors = world[prevRow][prevCol] + world[prevRow][col] + world[prevRow][nextCol]\n",
        "\n",
        "\n",
        "    # Add the two neighbors in the same row to numNeighbors\n",
        "    numNeighbors += world[row][prevCol] + world[row][nextCol]  # REPLACE THE 0 WITH SOMETHING APPROPRIATE\n",
        "\n",
        "    # Add the three neighbor cells in the next row to numNeighbors\n",
        "    numNeighbors += world[nextRow][prevCol] + world[nextRow][col] + world[nextRow][nextCol]\n",
        "\n",
        "    return numNeighbors\n",
        "\n",
        "\"\"\" This function checks to see if a cell should live\n",
        "PARAMETERS:\n",
        "    world - A 2d list of 0s and 1s\n",
        "    row, col - The position in the world to check\n",
        "RETURNS:\n",
        "    1 if the cell should live\n",
        "    0 otherwise\n",
        "\"\"\"\n",
        "def isAlive(world, row, col):\n",
        "\n",
        "    # Determine the number of neighbors of the current cell\n",
        "    # Use the countNeighbors function\n",
        "    numNeighbors = countNeighbors(world, row, col)      # REPLACE THE 0 WITH SOMETHING APPROPRIATE\n",
        "\n",
        "    # WRITE CODE TO IMPLEMENT THE FOLLOWING LOGIC:\n",
        "    \"\"\" If the current cell is alive:\n",
        "            if it has 2 or 3 neighbors it should live on (stasis) (ie, return 1);\n",
        "            otherwise it should die (over- or underpopulation) (ie, return 0)\n",
        "        If the current cell is empty:\n",
        "            if it has exactly 3 neighbors, it should become alive (reproduction) (return 1)\n",
        "            otherwise it remains dead (return 0)\n",
        "    \"\"\"\n",
        "    if world[row][col] == 1:\n",
        "      return 1 if numNeighbors == 2 or numNeighbors == 3 else 0\n",
        "    else:\n",
        "      return 1 if numNeighbors == 3 else 0\n",
        "\n",
        "\n",
        "\"\"\" This function runs the game of life simulation\n",
        "PARAMETERS:\n",
        "    wsize - The world is represented by a square wsize list\n",
        "    gens - The number of generations to simulate\n",
        "    prop_alive - Proportion of cells that should be 1 when the program starts\n",
        "                 This should be a real number in the range [0, 1].\n",
        "\"\"\"\n",
        "def simulation(wsize, gens, prop_alive):\n",
        "    # Generate the world\n",
        "    world = generateWorld(wsize,prop_alive)\n",
        "    # Alternatively, load a world\n",
        "    #world = loadWorld(wsize, 1)\n",
        "\n",
        "    #Create a list of worlds, 1 for the initial world, plus 1 for each generation\n",
        "    worlds = [0]*(gens+1)\n",
        "    worlds[0] = world\n",
        "    # Loop through each generation\n",
        "    for gen in range(gens):\n",
        "        nextWorld = [[0]*wsize for i in range(wsize)]  # A list of 0s for the next gen\n",
        "        rows,cols = len(world),len(world[0])\n",
        "\n",
        "        # FILL IN THE CODE HERE\n",
        "   # for r in range(nextWorld):\n",
        "    #  for c in range(nextWorld[r]):\n",
        "        for r in range(len(world)):\n",
        "          for c in range(len(world[r])):\n",
        "            nextWorld[r][c] = isAlive(world, r, c)\n",
        "\n",
        "        \"\"\" For every element in the nextWorld (ie, use a nested for loop)\n",
        "                Determine whether it should be alive or dead (set it to 1 or 0)\n",
        "                (Use the isAlive function to handle this)\n",
        "        \"\"\"\n",
        "#update 3 lines of code:!!!!\n",
        "        # Save the current world in the list to be displayed\n",
        "        worlds[gen+1] = nextWorld\n",
        "        world = nextWorld\n",
        "\n",
        "    # Return the list of worlds to be displayed\n",
        "    return worlds\n",
        "\n",
        "\"\"\" This function is the starting point for Conway's game of life.\n",
        "It gets input from the user for the size of the world, the number of generations,\n",
        "and the proportion of cells that should be alive.  It then runs the simulation\n",
        "\"\"\"\n",
        "def main():\n",
        "    wsize = int(input(\"The world will be an n x n size grid. Enter this a value for n: \"))\n",
        "    prop_alive = float(input(\"Enter proportion (a number between 0 and 1) of cells that should start as alive. \"))\n",
        "    gens = int(input(\"Enter the number of generations for the game of life to run: \"))\n",
        "    worlds = simulation(wsize, gens, prop_alive)\n",
        "    displayWorld(worlds)\n",
        "\n",
        "main()\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "LZy9wtw_RaeJ"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "LDL8gatZS6vJ"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "w = generateWorld(10, 0.3)\n",
        "print(countNeighbors(world, 5, 5))"
      ],
      "metadata": {
        "id": "UAReHAu-34mN",
        "outputId": "783776ed-4f4d-47ce-bcb7-80902932022f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 382
        }
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1, 0, 0, 0, 0, 0, 0, 0, 1, 0]\n",
            "[0, 0, 0, 0, 0, 0, 0, 0, 1, 0]\n",
            "[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]\n",
            "[0, 1, 1, 0, 1, 0, 0, 0, 1, 0]\n",
            "[0, 0, 0, 0, 1, 1, 0, 0, 1, 1]\n",
            "[0, 1, 0, 1, 0, 1, 1, 1, 1, 0]\n",
            "[1, 0, 1, 1, 0, 1, 1, 0, 1, 1]\n",
            "[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]\n",
            "[0, 0, 0, 1, 1, 0, 0, 0, 1, 0]\n",
            "[0, 0, 1, 0, 0, 1, 0, 0, 0, 0]\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'world' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-a800cb473b72>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mw\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgenerateWorld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcountNeighbors\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mworld\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'world' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "TohaRNOM35G-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_hXyv4e91Wyx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "Bmak1c4B1Xod"
      }
    }
  ]
}